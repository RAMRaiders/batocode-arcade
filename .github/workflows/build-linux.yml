name: Build and Package

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build inside Arch Linux container
        run: |
          docker run --rm -v $PWD:/workspace -w /workspace archlinux:latest /bin/bash -c "
            set -e

            # Update package database and install dependencies
            pacman -Sy --noconfirm base-devel git devtools

            # Set version
            if [[ \"${GITHUB_REF}\" == refs/tags/* ]]; then
              VERSION=\${GITHUB_REF##refs/tags/}
              VERSION=\${VERSION#v}
            else
              VERSION=\"pr-${GITHUB_SHA:0:7}\"
            fi
            echo \"VERSION=\$VERSION\" > version.env

            # Create tarball
            cd dist
            TAR_NAME=\"batocode-arcade-\$VERSION-${{ matrix.arch }}.tar.gz\"
            tar -czf \"\$TAR_NAME\" \"batocode-arcade-linux-${{ matrix.arch }}-\$VERSION\"
            echo \"tarball_path=\$(pwd)/\$TAR_NAME\" > tarball.env
            echo \"tarball_name=\$TAR_NAME\" >> tarball.env
            cd ..

            # Create pacman package
            PKG_ARCH=\"\"
            if [[ \"${{ matrix.arch }}\" == \"x64\" ]]; then
              PKG_ARCH=\"x86_64\"
            else
              PKG_ARCH=\"aarch64\"
            fi
            cd batocera-pkg
            tar --zstd -cf ../batocode-arcade-\$VERSION-\$PKG_ARCH.pkg.tar.zst .
            cd ..

            # Create pacman repo
            mkdir -p pacman-repo
            cp batocode-arcade-\$VERSION-\$PKG_ARCH.pkg.tar.zst pacman-repo/
            cd pacman-repo
            pacman -Sy --noconfirm devtools
            repo-add batocode-arcade.db.tar.gz batocode-arcade-\$VERSION-\$PKG_ARCH.pkg.tar.zst
          "

      - name: Load version and tarball info
        id: load-vars
        run: |
          cat version.env
          cat tarball.env
          echo "VERSION=$(grep VERSION version.env | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "tarball_name=$(grep tarball_name tarball.env | cut -d '=' -f2)" >> $GITHUB_ENV

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: batocode-arcade-${{ matrix.arch }}-${{ github.event_name == 'pull_request' && format('pr-{0}', github.sha) || github.ref_name }}
          path: |
            dist/*.tar.gz
            *.pkg.tar.zst
            pacman-repo/*
          retention-days: 5